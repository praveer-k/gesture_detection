name: mflow_service

on:
  push:
    branches:
      - main
      - production
      - staging

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: europe-west3
  GKE_CLUSTER: cluster-1
  GKE_ZONE: europe-west3-c
  DEPLOYMENT_NAME: production
  REPOSITORY: mlflow
  IMAGE: hosted-service
  DB_CONNECTION_NAME: opendatasets-349618:europe-west3:ml-flow-database
  DB_PUBLIC_IP: "35.198.128.157"

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
        
    - name: Docker configuration
      run: |-
        gcloud beta auth configure-docker ${GAR_LOCATION}-docker.pkg.dev
    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "${GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/${IMAGE}:${GITHUB_SHA}" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        docker push "${GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/${IMAGE}:${GITHUB_SHA}"
  
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        gcloud config set run/region ${GAR_LOCATION}
        gcloud run deploy mlflow --image ${GAR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY}/${IMAGE}:${GITHUB_SHA} \
                                 --add-cloudsql-instances="${DB_CONNECTION_NAME}" \
                                 --set-env-vars INSTANCE_CONNECTION_NAME="${DB_CONNECTION_NAME}" \
                                 --set-env-vars INSTANCE_UNIX_SOCKET="/cloudsql/${DB_CONNECTION_NAME}" \
                                 --set-env-vars DEFAULT_ARTIFACT_ROOT="gs://mlflow_cloud_storage_artifacts" \
                                 --set-secrets="OAUTH_PROXY_CONFIG=oauth_proxy_config:latest,DB_NAME=mlflow_db_name:latest,DB_USER=mlflow_db_user:latest,DB_PASS=mlflow_db_pass:latest,BACKEND_STORE_URI=mlflow_backend_store_uri:latest"
